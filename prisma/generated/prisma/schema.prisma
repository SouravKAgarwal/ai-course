generator client {
  provider      = "prisma-client-js"
  output        = "./generated/prisma"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String     @id @default(uuid())
  name          String?
  email         String     @unique
  emailVerified DateTime?
  image         String?
  courses       Course[]
  progress      Progress[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Course {
  id                      String     @id @default(cuid())
  courseId                String     @unique
  title                   String
  subtitle                String
  category                String
  level                   String
  duration_weeks          Int
  estimated_total_minutes Int
  description             String
  learning_outcomes       String[]
  image_url               String?
  chapters                Json[]
  createdBy               String
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  user                    User       @relation(fields: [createdBy], references: [id], onDelete: Cascade)
  progress                Progress[]

  @@map("courses")
}

model Progress {
  id             String    @id @default(cuid())
  userId         String
  courseId       String
  completed      Boolean   @default(false)
  completedAt    DateTime?
  currentChapter Int       @default(1)
  chapters       Json
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  course         Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)
  user           User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, courseId])
  @@map("progress")
}
